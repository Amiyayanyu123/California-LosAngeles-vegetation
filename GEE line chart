//LA PDSI
Map.centerObject(roi, 10);  
//monthly pdsi
var collection = ee.ImageCollection("IDAHO_EPSCOR/TERRACLIMATE").select("pdsi")  
var yearList = ee.List.sequence(2000, 2020);  
var monthList = ee.List.sequence(1, 12);  
var imgList = yearList.map(function(year) {  
  year = ee.Number(year);  
  var monthImgList = monthList.map(function(month) {  
    month = ee.Number(month);  
    var tempCol = collection.filter(ee.Filter.calendarRange(year, year, "year"))  
                    .filter(ee.Filter.calendarRange(month, month, "month")) 
    var img = tempCol.mean()
    var img = img.select("pdsi").multiply(0.01) ;  
    img = img.set("year", year);  
    img = img.set("month", month);  
    var date = ee.Date.fromYMD(year, month, 1);  
    img = img.set("system:index", date.format("yyyyMM"));  
    img = img.set("system:time_start", date.millis());  
    return img;  
  });  
  return monthImgList;  
});  
imgList = imgList.flatten();  
var imgCol = ee.ImageCollection.fromImages(imgList);  
//chart             
var sCol = imgCol.filterDate("2001-1-1", "2020-12-1")  
             .select('pdsi');  
// Define the chart and print it to the console.
var chart = ui.Chart.image.series({
  imageCollection: sCol,
  region: roi,
  reducer:ee.Reducer.mean(),
  scale: 1000
}).setOptions({title: 'PDSI'});



library(lubridate) # for working with dates
library(ggplot2)  # for creating graphs
library(scales)   # to access breaks/formatting functions
library(gridExtra) # for arranging plots
library(grid)   # for arranging plots
library(dplyr)  # for subsetting by season
library(reshape2)
library(tidyr)
library(extrafont)
font_import()
loadfonts(device="win") 
windowsFonts(A = windowsFont("Arial"))
setwd("C:\\Users\\ADMIN\\Desktop\\Idea\\figures\\line_chart")
r<-read.table("LST_JP_moving.txt",header=T, na.strings = "NA", sep="\t")
data=melt(as.data.frame(r),id.vars = "Date")
data$Date <- as.Date(data$Date)
ggplot(data, aes(x = Date, y = value)) + 
  geom_line(aes(linetype="solid"),size=0.5)+ylim(-1.5,2.5)+theme_bw()+theme(text = element_text(size=15,family = "A",face="bold" ))+
  scale_x_date(date_breaks = '2 years', labels = date_format("%Y"))+theme(legend.position="none")+
  geom_smooth(method="lm",linetype = "dashed",color="#F68657", size=1.5, se = T,formula = y ~x)
#########
r<-read.table("PDSI.txt",header=T, na.strings = "NA", sep="\t")
data=melt(as.data.frame(r),id.vars = "Date")
data$Date <- as.Date(data$Date)
ggplot(data, aes(x = Date, y = value)) + 
  geom_line(aes(linetype="solid"),size=0.5)+ylim(-5, 7)+
  theme_bw()+theme(text = element_text(size=15,family = "A",face="bold" ))+
  scale_x_date(date_breaks = '2 years', labels = date_format("%Y"))+theme(legend.position="none")+
  geom_hline(yintercept=-2, linetype="dashed", color = "#F68657",size = 1.5)
#########
r<-read.table("Pre_JP.txt",header=T, na.strings = "NA", sep="\t")
data=melt(as.data.frame(r),id.vars = "Date")
data$Date <- as.Date(data$Date)
ggplot(data, aes(x = Date, y = value)) +
  geom_bar(stat="identity",position = 'dodge')+theme_bw()+theme(text = element_text(size=15,family = "A",face="bold" ))+
  scale_x_date(limits = c (as.Date("2001-01-01"),as.Date("2020-12-01")),date_breaks = '2 years', labels = date_format("%Y"))+theme(legend.position="none")+
  ylab("Precipitation anomaly (mm)")+scale_y_continuous(breaks = c(-50,0,50,100,150),limits = c(-70,170))

print(chart);
